apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    flavorDimensions "api"
    productFlavors {
        dandanplay {

        }
        bgm {
            applicationId "com.xyoye.dandanplay.bgm"
        }
    }

    defaultConfig {
        applicationId "com.xyoye.dandanplay"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        ndk {
            abiFilters 'armeabi-v7a'
        }
    }

    signingConfigs {
        debug {
            def propertiesFile = rootProject.file("keystore.properties")
            if (!propertiesFile.exists()){
                propertiesFile = rootProject.file("debug.properties")
            }
            if (propertiesFile.exists()){
                def debugProperties = new Properties()
                debugProperties.load(new FileInputStream(propertiesFile))

                storeFile file(debugProperties['KEY_LOCATION'])
                storePassword debugProperties['KEYSTORE_PASS']
                keyAlias debugProperties['ALIAS_NAME']
                keyPassword debugProperties['ALIAS_PASS']
            }
        }

        release {
            def propertiesFile = rootProject.file("release.properties")
            if (propertiesFile.exists()){
                def releaseProperties = new Properties()
                releaseProperties.load(new FileInputStream(propertiesFile))

                storeFile file(releaseProperties['KEY_LOCATION'])
                storePassword releaseProperties['KEYSTORE_PASS']
                keyAlias releaseProperties['ALIAS_NAME']
                keyPassword releaseProperties['ALIAS_PASS']
            }else{
                storeFile file("../dandanplay.jks")
                storePassword System.getenv("KEYSTORE_PASS")
                keyAlias System.getenv("ALIAS_NAME")
                keyPassword System.getenv("ALIAS_PASS")
            }

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding = true
    }

    repositories {
        flatDir {
            dirs project(':download_component').file('libs')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["test_junit"]
    androidTestImplementation rootProject.ext.dependencies["test_espresso-core"]

    kapt rootProject.ext.dependencies["arouter-compiler"]

    implementation project(path: ':common_component')
    if (!IS_APPLICATION_RUN.toBoolean()){
        implementation project(path: ':download_component')
        implementation project(path: ':player_component')
        implementation project(path: ':anime_component')
        implementation project(path: ':user_component')
        implementation project(path: ':local_component')
        implementation project(path: ':stream_component')
    }
}
