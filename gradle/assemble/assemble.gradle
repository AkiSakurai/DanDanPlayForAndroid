android {

    signingConfigs {
        debug {
            def propertiesFile = rootProject.file("gradle/assemble/keystore.properties")
            if (!propertiesFile.exists()){
                propertiesFile = rootProject.file("gradle/assemble/debug.properties")
            }
            if (propertiesFile.exists()){
                def debugProperties = new Properties()
                debugProperties.load(new FileInputStream(propertiesFile))

                storeFile file(debugProperties['KEY_LOCATION'])
                storePassword debugProperties['KEYSTORE_PASS']
                keyAlias debugProperties['ALIAS_NAME']
                keyPassword debugProperties['ALIAS_PASS']
            }
        }

        release {
            def propertiesFile = rootProject.file("release.properties")
            if (propertiesFile.exists()){
                def releaseProperties = new Properties()
                releaseProperties.load(new FileInputStream(propertiesFile))

                storeFile file(releaseProperties['KEY_LOCATION'])
                storePassword releaseProperties['KEYSTORE_PASS']
                keyAlias releaseProperties['ALIAS_NAME']
                keyPassword releaseProperties['ALIAS_PASS']
            }else{
                storeFile file("../gradle/assemble/dandanplay.jks")
                storePassword System.getenv("KEYSTORE_PASS")
                keyAlias System.getenv("ALIAS_NAME")
                keyPassword System.getenv("ALIAS_PASS")
            }

        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        beta {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "dandanplay_v${defaultConfig.versionName}_${variant.name}_${releaseTime()}.apk"
        }
    }
}

static def releaseTime() {
    return new Date().format("MMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
}